# -*- coding: utf-8 -*-
"""app.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1EmBzPH70-wbCZA5hN1OLgncl3bc_CJZw
"""

!pip install streamlit

import streamlit as st
import pandas as pd
import joblib

# load model
from google.colab import drive
drive.mount('/content/MyDrive')

drive_path = '/content/MyDrive/MyDrive/IT_IM82/best_model_randomforest.pkl'

model = joblib.load(drive_path)


st.title("ML Model Prediction App")

# Option for user to upload CSV or input manually
upload_option = st.radio("Choose input method:", ("Manual Input", "Upload CSV"))

if upload_option == "Manual Input":
    # Create input fields (example with 4 features)
    feature1 = st.number_input("Feature 1", step=0.01)
    feature2 = st.number_input("Feature 2", step=0.01)
    feature3 = st.number_input("Feature 3", step=0.01)
    feature4 = st.number_input("Feature 4", step=0.01)

    input_data = pd.DataFrame([[feature1, feature2, feature3, feature4]],
                              columns=["feature1", "feature2", "feature3", "feature4"])

    if st.button("Predict"):
        prediction = model.predict(input_data)[0]
        st.success(f"Predicted Class: {prediction}")

elif upload_option == "Upload CSV":
    uploaded_file = st.file_uploader("Upload CSV", type=["csv"])
    if uploaded_file:
        data = pd.read_csv(uploaded_file)
        predictions = model.predict(data)
        st.write("Predictions:")
        st.write(predictions)

# Display performance summary (replace with your real values)
st.markdown("### ðŸ“Š Model Performance")
st.write("**Accuracy:** 77.27%")
st.write("**Confusion Matrix:**")
# Optional: add real confusion matrix image or table